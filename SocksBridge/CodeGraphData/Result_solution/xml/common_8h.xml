<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="common_8h" kind="file">
    <compoundname>common.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">memory</includes>
    <includes local="no">boost/system/error_code.hpp</includes>
    <includes local="no">boost/asio/ip/tcp.hpp</includes>
    <includes local="no">boost/asio/ip/address.hpp</includes>
    <includes local="no">boost/asio/io_service.hpp</includes>
    <includes local="no">boost/shared_array.hpp</includes>
    <includedby refid="socks__birdge_8h" local="yes">D:/CODE/SocksBridge/SocksBridge/socks_birdge.h</includedby>
    <includedby refid="socks__birdge_8cpp" local="yes">D:/CODE/SocksBridge/SocksBridge/socks_birdge.cpp</includedby>
    <includedby refid="socks__session_8h" local="yes">D:/CODE/SocksBridge/SocksBridge/socks_session.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>boost/asio/ip/address.hpp</label>
      </node>
      <node id="6">
        <label>boost/asio/io_service.hpp</label>
      </node>
      <node id="1">
        <label>string</label>
      </node>
      <node id="7">
        <label>boost/shared_array.hpp</label>
      </node>
      <node id="0">
        <label>D:/CODE/SocksBridge/SocksBridge/common.h</label>
        <link refid="common.h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>boost/system/error_code.hpp</label>
      </node>
      <node id="4">
        <label>boost/asio/ip/tcp.hpp</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14">
        <label>D:/CODE/SocksBridge/SocksBridge/socks_session.cpp</label>
        <link refid="socks__session_8cpp"/>
      </node>
      <node id="13">
        <label>D:/CODE/SocksBridge/SocksBridge/socks_session.h</label>
        <link refid="socks__session_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>D:/CODE/SocksBridge/SocksBridge/common.h</label>
        <link refid="common.h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>D:/CODE/SocksBridge/SocksBridge/socks_birdge.h</label>
        <link refid="socks__birdge_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>D:/CODE/SocksBridge/SocksBridge/HubWin.cpp</label>
        <link refid="_hub_win_8cpp"/>
      </node>
      <node id="12">
        <label>D:/CODE/SocksBridge/SocksBridge/SocksBridge.cpp</label>
        <link refid="_socks_bridge_8cpp"/>
      </node>
      <node id="11">
        <label>D:/CODE/SocksBridge/SocksBridge/socks_birdge.cpp</label>
        <link refid="socks__birdge_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classseraphim_1_1_byte_o_stream" prot="public">seraphim::ByteOStream</innerclass>
    <innerclass refid="classseraphim_1_1_byte_i_stream" prot="public">seraphim::ByteIStream</innerclass>
    <innernamespace refid="namespaceseraphim">seraphim</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;boost/system/error_code.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;boost/asio/ip/tcp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;boost/asio/ip/address.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;boost/asio/io_service.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;boost/shared_array.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespaceseraphim" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">seraphim<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::shared_ptr;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::system::error_code;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::shared_array;</highlight></codeline>
<codeline lineno="14" refid="namespaceseraphim_1a039abc666dcc43b519445191a75f5156" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceseraphim_1a039abc666dcc43b519445191a75f5156" kindref="member">endpoint</ref><sp/>=<sp/>boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;<sp/>;</highlight></codeline>
<codeline lineno="15" refid="namespaceseraphim_1a98076410a07d2454c5f735f83cdc0552" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceseraphim_1a98076410a07d2454c5f735f83cdc0552" kindref="member">socket</ref><sp/>=<sp/><ref refid="namespaceseraphim_1a98076410a07d2454c5f735f83cdc0552" kindref="member">boost::asio::ip::tcp::socket</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classseraphim_1_1_byte_o_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classseraphim_1_1_byte_o_stream" kindref="compound">ByteOStream</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20" refid="classseraphim_1_1_byte_o_stream_1a31cc76445a7ca34308197c207c3d7937" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><ref refid="classseraphim_1_1_byte_o_stream_1a31cc76445a7ca34308197c207c3d7937" kindref="member">buf_</ref>;</highlight></codeline>
<codeline lineno="21" refid="classseraphim_1_1_byte_o_stream_1a851941a733dffe1d9c31678fd2e2443e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a851941a733dffe1d9c31678fd2e2443e" kindref="member">max_size_</ref>;</highlight></codeline>
<codeline lineno="22" refid="classseraphim_1_1_byte_o_stream_1a2743916e283fb7d703cc948395cc9b8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a2743916e283fb7d703cc948395cc9b8c" kindref="member">offset_</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24" refid="classseraphim_1_1_byte_o_stream_1af6e6c29fb1e7a63c062e60be6cfd9ca8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classseraphim_1_1_byte_o_stream_1af6e6c29fb1e7a63c062e60be6cfd9ca8" kindref="member">ByteOStream</ref>(uint8_t*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>:<ref refid="classseraphim_1_1_byte_o_stream_1a31cc76445a7ca34308197c207c3d7937" kindref="member">buf_</ref>(buf),<sp/><ref refid="classseraphim_1_1_byte_o_stream_1a851941a733dffe1d9c31678fd2e2443e" kindref="member">max_size_</ref>(len),<sp/><ref refid="classseraphim_1_1_byte_o_stream_1a2743916e283fb7d703cc948395cc9b8c" kindref="member">offset_</ref>(0)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="28" refid="classseraphim_1_1_byte_o_stream_1a3e3c402d0e51e4e1397160ead0a67f2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a3e3c402d0e51e4e1397160ead0a67f2e" kindref="member">put</ref>(T<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbType<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assert((cbType<sp/>+<sp/>offset_)<sp/>&lt;=<sp/>max_size_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cbType<sp/>+<sp/><ref refid="classseraphim_1_1_byte_o_stream_1a2743916e283fb7d703cc948395cc9b8c" kindref="member">offset_</ref>)<sp/>&gt;<sp/><ref refid="classseraphim_1_1_byte_o_stream_1a851941a733dffe1d9c31678fd2e2443e" kindref="member">max_size_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LaOG_ERROR&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>src<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;t);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="classseraphim_1_1_byte_o_stream_1a31cc76445a7ca34308197c207c3d7937" kindref="member">buf_</ref><sp/>+<sp/><ref refid="classseraphim_1_1_byte_o_stream_1a2743916e283fb7d703cc948395cc9b8c" kindref="member">offset_</ref>,<sp/>src,<sp/>cbType);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a2743916e283fb7d703cc948395cc9b8c" kindref="member">offset_</ref><sp/>+=<sp/>cbType;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="39" refid="classseraphim_1_1_byte_o_stream_1ac8b400ea62cf7e345148bf36e7692c92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classseraphim_1_1_byte_o_stream_1ac8b400ea62cf7e345148bf36e7692c92" kindref="member">putN</ref>(T<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbType<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assert((cbType<sp/>+<sp/>offset_)<sp/>&lt;=<sp/>max_size_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>src<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;t);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>static_cast&lt;int&gt;(cbType<sp/>-<sp/>1);<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a31cc76445a7ca34308197c207c3d7937" kindref="member">buf_</ref>[<ref refid="classseraphim_1_1_byte_o_stream_1a2743916e283fb7d703cc948395cc9b8c" kindref="member">offset_</ref>++]<sp/>=<sp/>src[i];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47" refid="classseraphim_1_1_byte_o_stream_1a1fac35b1ee3af85ee45671d3fd114e44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a1fac35b1ee3af85ee45671d3fd114e44" kindref="member">put_arry</ref>(uint8_t*<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assert(len<sp/>+<sp/>offset_<sp/>&lt;=<sp/>max_size_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;<ref refid="classseraphim_1_1_byte_o_stream_1a31cc76445a7ca34308197c207c3d7937" kindref="member">buf_</ref>[<ref refid="classseraphim_1_1_byte_o_stream_1a2743916e283fb7d703cc948395cc9b8c" kindref="member">offset_</ref>],<sp/>src,<sp/>len);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//template&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classseraphim_1_1_byte_o_stream_1a8d74132caf146df23424199178a5a562" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a8d74132caf146df23424199178a5a562" kindref="member">put_arry</ref>(shared_array&lt;uint8_t&gt;<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a1fac35b1ee3af85ee45671d3fd114e44" kindref="member">put_arry</ref>(buf.get(),<sp/>len);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a2743916e283fb7d703cc948395cc9b8c" kindref="member">offset_</ref><sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58" refid="classseraphim_1_1_byte_o_stream_1a7887cdedd9ecf481b8df76870fe5e2e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a7887cdedd9ecf481b8df76870fe5e2e6" kindref="member">reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="classseraphim_1_1_byte_o_stream_1a31cc76445a7ca34308197c207c3d7937" kindref="member">buf_</ref>,<sp/>0,<sp/><ref refid="classseraphim_1_1_byte_o_stream_1a851941a733dffe1d9c31678fd2e2443e" kindref="member">max_size_</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseraphim_1_1_byte_o_stream_1a2743916e283fb7d703cc948395cc9b8c" kindref="member">offset_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classseraphim_1_1_byte_i_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classseraphim_1_1_byte_i_stream" kindref="compound">ByteIStream</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66" refid="classseraphim_1_1_byte_i_stream_1a0f42b6759ec2c6cb41af5e9a0d769509" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><ref refid="classseraphim_1_1_byte_i_stream_1a0f42b6759ec2c6cb41af5e9a0d769509" kindref="member">buf_</ref>;</highlight></codeline>
<codeline lineno="67" refid="classseraphim_1_1_byte_i_stream_1a391caedd89477fff0ce57bec5b514e59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classseraphim_1_1_byte_i_stream_1a391caedd89477fff0ce57bec5b514e59" kindref="member">offset_</ref>;</highlight></codeline>
<codeline lineno="68" refid="classseraphim_1_1_byte_i_stream_1ad162a005c817c80044e8c4a568b75590" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classseraphim_1_1_byte_i_stream_1ad162a005c817c80044e8c4a568b75590" kindref="member">max_len</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70" refid="classseraphim_1_1_byte_i_stream_1a12d056980b32d1e72f0c754bb0cc2bc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classseraphim_1_1_byte_i_stream_1a12d056980b32d1e72f0c754bb0cc2bc3" kindref="member">ByteIStream</ref>(uint8_t*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>:<ref refid="classseraphim_1_1_byte_i_stream_1a0f42b6759ec2c6cb41af5e9a0d769509" kindref="member">buf_</ref>(buf),<sp/><ref refid="classseraphim_1_1_byte_i_stream_1a391caedd89477fff0ce57bec5b514e59" kindref="member">offset_</ref>(0),<sp/><ref refid="classseraphim_1_1_byte_i_stream_1ad162a005c817c80044e8c4a568b75590" kindref="member">max_len</ref>(len)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="75" refid="classseraphim_1_1_byte_i_stream_1acc40e90c02d31cabf0ea418b786e237b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>t;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbType<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assert((max_len<sp/>-<sp/>offset_<sp/>-<sp/>cbType)<sp/>&gt;=<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/><sp/>p<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;t);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cbType;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/><ref refid="classseraphim_1_1_byte_i_stream_1a0f42b6759ec2c6cb41af5e9a0d769509" kindref="member">buf_</ref>[<ref refid="classseraphim_1_1_byte_i_stream_1a391caedd89477fff0ce57bec5b514e59" kindref="member">offset_</ref>++];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="86" refid="classseraphim_1_1_byte_i_stream_1a15a936f4ff2481670b40c48e05a5f0c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classseraphim_1_1_byte_i_stream_1a15a936f4ff2481670b40c48e05a5f0c3" kindref="member">getN</ref>()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>t;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cbType<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assert((max_len<sp/>-<sp/>offset_<sp/>-<sp/>cbType)<sp/>&gt;=<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/><sp/>p<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;t);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>static_cast&lt;int&gt;(cbType<sp/>-<sp/>1);<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/><ref refid="classseraphim_1_1_byte_i_stream_1a0f42b6759ec2c6cb41af5e9a0d769509" kindref="member">buf_</ref>[<ref refid="classseraphim_1_1_byte_i_stream_1a391caedd89477fff0ce57bec5b514e59" kindref="member">offset_</ref>++];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="99" refid="classseraphim_1_1_byte_i_stream_1afee051b01b71cea445956c33853cb446" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classseraphim_1_1_byte_i_stream_1afee051b01b71cea445956c33853cb446" kindref="member">get_array</ref>(T*<sp/>dst,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;<ref refid="classseraphim_1_1_byte_i_stream_1a0f42b6759ec2c6cb41af5e9a0d769509" kindref="member">buf_</ref>[<ref refid="classseraphim_1_1_byte_i_stream_1a391caedd89477fff0ce57bec5b514e59" kindref="member">offset_</ref>],<sp/>dst,<sp/>len);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103" refid="classseraphim_1_1_byte_i_stream_1a5649643de880d6833585f7702f5f561b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classseraphim_1_1_byte_i_stream_1a5649643de880d6833585f7702f5f561b" kindref="member">reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="classseraphim_1_1_byte_i_stream_1a0f42b6759ec2c6cb41af5e9a0d769509" kindref="member">buf_</ref>,<sp/>0,<sp/><ref refid="classseraphim_1_1_byte_i_stream_1ad162a005c817c80044e8c4a568b75590" kindref="member">max_len</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classseraphim_1_1_byte_i_stream_1a391caedd89477fff0ce57bec5b514e59" kindref="member">offset_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="D:/CODE/SocksBridge/SocksBridge/common.h"/>
  </compounddef>
</doxygen>
